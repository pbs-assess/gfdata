% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{sql_geom_to_sf}
\alias{sql_geom_to_sf}
\title{Convert SQL Geometry Data to an sf Polygon Object}
\usage{
sql_geom_to_sf(.d, crs = 4326)
}
\arguments{
\item{.d}{A data frame with columns \code{pt1_lon}, \code{pt1_lat}, \code{pt2_lon}, \code{pt2_lat},
\code{pt3_lon}, \code{pt3_lat}, \code{pt4_lon}, and \code{pt4_lat}, representing the four corners of polygons.
The function expects these exact column names
Additional columns will be preserved in the output.}

\item{crs}{An integer specifying the coordinate reference system (CRS).
Defaults to \code{4326} (WGS 84). The function will warn if you specify WGS84 (4326)
but provide coordinates that appear to be in a projected system (e.g., UTM coordinates
with values outside the longitude range -180 to 180).}
}
\value{
An \code{sf} object with polygon geometries and original data attributes (excluding point columns).
}
\description{
This function converts a data frame containing SQL-style geometry coordinates
(four corner points per polygon) into an \code{sf} polygon object.
The SQL-style geometry is returned from spatial SQL tables like SURVEY_SITE
and SURVEY_SITE_HISTORIC in GFBioSQL.
}
\examples{
\dontrun{
# Example with data from GFBioSQL
.d <- gfdata::get_active_survey_blocks(active_only = TRUE)
sql_geom_to_sf(.d, crs = 4326)
}

# Example with WGS84 coordinates (standalone, no database required)
wgs84_data <- data.frame(
  pt1_lon = -123.0, pt1_lat = 48.0,
  pt2_lon = -122.9, pt2_lat = 48.0,
  pt3_lon = -122.9, pt3_lat = 48.1,
  pt4_lon = -123.0, pt4_lat = 48.1,
  site_id = "A1"
)
sql_geom_to_sf(wgs84_data, crs = 4326)  # WGS84 coordinates

}
